# assistant/gui.py
import sys
from PyQt6.QtWidgets import (
    QMainWindow, QWidget, QVBoxLayout, QHBoxLayout, QPushButton, QLabel,
    QTextEdit, QDialog, QFormLayout, QLineEdit, QDialogButtonBox, QApplication
)
from PyQt6.QtCore import QTimer, Qt, QThread, pyqtSignal
from .tts import speak, CURRENT_TTS_PROCESS
from .chatgpt import ask_chatgpt
from .commands import handle_command
from .speech import recognize_speech  # –§—É–Ω–∫—Ü–∏—è –∏–∑ assistant/speech.py

class SpeechThread(QThread):
    # –°–∏–≥–Ω–∞–ª –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
    recognized = pyqtSignal(str)
    # –°–∏–≥–Ω–∞–ª, —É–≤–µ–¥–æ–º–ª—è—é—â–∏–π, —á—Ç–æ –ø–æ—Ç–æ–∫ –Ω–∞—á–∞–ª –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ
    listeningStarted = pyqtSignal()

    def __init__(self, parent=None):
        super().__init__(parent)
        self._running = True  # —Ñ–ª–∞–≥, –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É—é—â–∏–π —Ä–∞–±–æ—Ç—É –ø–æ—Ç–æ–∫–∞

    def run(self):
        self.listeningStarted.emit()
        while self._running:
            text = recognize_speech()
            if text:
                self.recognized.emit(text)

    def stop(self):
        self._running = False

class SettingsDialog(QDialog):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setWindowTitle("–ù–∞—Å—Ç—Ä–æ–π–∫–∏")
        layout = QFormLayout(self)
        # –ü—Ä–∏–º–µ—Ä –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Äì —Å–∫–æ—Ä–æ—Å—Ç—å —Ä–µ—á–∏ (–ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è –≤ TTS)
        self.speechRateEdit = QLineEdit(self)
        self.speechRateEdit.setText("150")
        layout.addRow("–°–∫–æ—Ä–æ—Å—Ç—å —Ä–µ—á–∏:", self.speechRateEdit)
        # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ OK/Cancel
        buttonBox = QDialogButtonBox(QDialogButtonBox.StandardButton.Ok |
                                     QDialogButtonBox.StandardButton.Cancel)
        buttonBox.accepted.connect(self.accept)
        buttonBox.rejected.connect(self.reject)
        layout.addWidget(buttonBox)

    def getSettings(self):
        return {"speech_rate": self.speechRateEdit.text()}

class AssistantWindow(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("–ì–æ–ª–æ—Å–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫")
        self.resize(400, 600)
        centralWidget = QWidget(self)
        self.setCentralWidget(centralWidget)
        mainLayout = QVBoxLayout(centralWidget)

        # –ü–∞–Ω–µ–ª—å —Å–æ—Å—Ç–æ—è–Ω–∏—è
        self.statusLabel = QLabel("–ì–æ—Ç–æ–≤ –∫ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—é", self)
        self.statusLabel.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.statusLabel.setStyleSheet("background-color: lightgray; font-size: 16px;")
        mainLayout.addWidget(self.statusLabel)

        # –ò–∫–æ–Ω–∫–∞ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
        self.microphoneLabel = QLabel("üé§", self)
        self.microphoneLabel.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.microphoneLabel.setStyleSheet("font-size: 48px;")
        mainLayout.addWidget(self.microphoneLabel)

        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        buttonLayout = QHBoxLayout()
        self.startButton = QPushButton("–ù–∞—á–∞—Ç—å —Å–ª—É—à–∞—Ç—å", self)
        self.stopButton = QPushButton("–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ", self)
        self.stopResponseButton = QPushButton("–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Ç–≤–µ—Ç", self)
        self.settingsButton = QPushButton("–ù–∞—Å—Ç—Ä–æ–π–∫–∏", self)
        buttonLayout.addWidget(self.startButton)
        buttonLayout.addWidget(self.stopButton)
        buttonLayout.addWidget(self.stopResponseButton)
        buttonLayout.addWidget(self.settingsButton)
        mainLayout.addLayout(buttonLayout)

        # –û–±–ª–∞—Å—Ç—å –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏ (—á–∞—Ç)
        self.chatHistory = QTextEdit(self)
        self.chatHistory.setReadOnly(True)
        mainLayout.addWidget(self.chatHistory)

        # –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫–∏
        self.startButton.clicked.connect(self.startListening)
        self.stopButton.clicked.connect(self.stopListening)
        self.stopResponseButton.clicked.connect(self.stopResponse)
        self.settingsButton.clicked.connect(self.openSettings)

        # –¢–∞–π–º–µ—Ä –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞
        self.animationTimer = QTimer(self)
        self.animationTimer.timeout.connect(self.animateMicrophone)
        self.animationState = 0

        # –§–ª–∞–≥ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è
        self.isListening = False

        # –ü–æ—Ç–æ–∫ –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏ (–∏–∑–Ω–∞—á–∞–ª—å–Ω–æ None)
        self.speechThread = None

        # –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –µ—Å–ª–∏ –Ω–µ—Ç –æ—Ç–∫—Ä—ã—Ç—ã—Ö –æ–∫–æ–Ω
        QApplication.instance().setQuitOnLastWindowClosed(False)

    def startListening(self):
        self.isListening = True
        self.chatHistory.append("–ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è...")
        self.animationTimer.start(300)  # –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 300 –º—Å
        # –ï—Å–ª–∏ –ø–æ—Ç–æ–∫–∞ –Ω–µ—Ç –∏–ª–∏ –æ–Ω —É–∂–µ –∑–∞–≤–µ—Ä—à—ë–Ω, —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π
        if self.speechThread is None or not self.speechThread.isRunning():
            self.speechThread = SpeechThread()
            self.speechThread.recognized.connect(self.processSpeech)
            self.speechThread.listeningStarted.connect(self.onListeningStarted)
            self.speechThread.start()

    def stopListening(self):
        self.isListening = False
        self.statusLabel.setText("–ì–æ—Ç–æ–≤ –∫ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—é")
        self.chatHistory.append("–ü—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.")
        self.animationTimer.stop()
        self.microphoneLabel.setStyleSheet("font-size: 48px;")
        # –ï—Å–ª–∏ –ø–æ—Ç–æ–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –µ–≥–æ
        if self.speechThread is not None and self.speechThread.isRunning():
            self.speechThread.stop()
            self.speechThread.wait()

    def stopResponse(self):
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π TTS-–ø—Ä–æ—Ü–µ—Å—Å, –µ—Å–ª–∏ –æ–Ω –∞–∫—Ç–∏–≤–µ–Ω
        from .tts import CURRENT_TTS_PROCESS
        if CURRENT_TTS_PROCESS is not None and CURRENT_TTS_PROCESS.is_alive():
            CURRENT_TTS_PROCESS.terminate()
            CURRENT_TTS_PROCESS.join()
            self.chatHistory.append("–û—Ç–≤–µ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
        else:
            self.chatHistory.append("–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.")

    def animateMicrophone(self):
        colors = ["red", "green", "blue", "orange"]
        color = colors[self.animationState % len(colors)]
        self.microphoneLabel.setStyleSheet(f"font-size: 48px; color: {color};")
        self.animationState += 1

    def openSettings(self):
        dialog = SettingsDialog(self)
        if dialog.exec() == QDialog.DialogCode.Accepted:
            settings = dialog.getSettings()
            self.chatHistory.append(f"–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã: {settings}")
            # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ TTS –∏–ª–∏ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö

    def onListeningStarted(self):
        self.statusLabel.setText("–ù–∞—á–∏–Ω–∞—é —Å–ª—É—à–∞—Ç—å")

    def processSpeech(self, text):
        # –ï—Å–ª–∏ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ ‚Äì –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –≤—Ö–æ–¥—è—â–∏–π —Ç–µ–∫—Å—Ç
        if not self.isListening:
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞ "–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç" –≤ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω–æ–º —Ç–µ–∫—Å—Ç–µ
        lower_text = text.lower()
        if "–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç" not in lower_text:
            self.chatHistory.append("–ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ '–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç'.")
            return

        # –£–±–∏—Ä–∞–µ–º –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ (—É–¥–∞–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤–æ–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ)
        cleaned_text = lower_text.replace("–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç", "", 1).strip()
        if not cleaned_text:
            # –ï—Å–ª–∏ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞ –Ω–∏—á–µ–≥–æ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å, –ø—Ä–µ—Ä—ã–≤–∞–µ–º TTS, –µ—Å–ª–∏ –∞–∫—Ç–∏–≤–Ω–æ
            from .tts import CURRENT_TTS_PROCESS
            if CURRENT_TTS_PROCESS is not None and CURRENT_TTS_PROCESS.is_alive():
                CURRENT_TTS_PROCESS.terminate()
                CURRENT_TTS_PROCESS.join()
                self.chatHistory.append("–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ä–µ—á–∏ –ø—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ –∫–æ–º–∞–Ω–¥–µ '–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç'.")
            return

        # –ï—Å–ª–∏ TTS-–ø—Ä–æ—Ü–µ—Å—Å –∞–∫—Ç–∏–≤–µ–Ω, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É
        from .tts import CURRENT_TTS_PROCESS
        if CURRENT_TTS_PROCESS is not None and CURRENT_TTS_PROCESS.is_alive():
            self.chatHistory.append("–ò–≥–Ω–æ—Ä–∏—Ä—É—é –∫–æ–º–∞–Ω–¥—É, –ø–æ–∫–∞ –≥–æ–≤–æ—Ä—é.")
            return

        self.chatHistory.append(f"–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∫–æ–º–∞–Ω–¥—É: {cleaned_text}")
        handle_command(cleaned_text)
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–µ –Ω–∞ 10 —Å–µ–∫—É–Ω–¥ –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã
        self.stopListening()
        QTimer.singleShot(10000, self.startListening)

if __name__ == "__main__":
    app = QApplication(sys.argv)
    window = AssistantWindow()
    window.show()
    sys.exit(app.exec())
